branches:
  - main
plugins:
  - - '@semantic-release/commit-analyzer'
    - preset: conventionalcommits
      releaseRules:
        - {type: patch, release: patch}
        - {type: minor, release: minor}
        - {type: major, release: major}
        - {type: perf, release: patch}
  - - '@semantic-release/release-notes-generator'
    - preset: conventionalcommits
#      writerOpts:
#        commitsSort: ['subject', 'scope']
#        groupBy: type
#        commitGroupsSort: ['feat', 'fix', 'perf', 'refactor', 'docs', 'test', 'style']
#        headerPartial: |
#          {{#if @root.linkCompare~}}
#            ## [{{version}}]({{compareUrlFormat}}) {{~#if date}}({{date}}){{/if}}
#          {{~else}}
#            ## {{version}}{{~#if date}} ({{date}}){{/if}}
#          {{~/if}}
#        commitPartial: |
#          * {{#if subject}}{{subject}}{{else}}{{header}}{{/if}}{{#if hash}} ([{{hash}}]({{commitUrlFormat}})){{/if}}{{#if references}}{{#each references}} [#{{this.issue}}]({{issueUrlFormat}}){{/each}}{{/if}}
#        transform: |
#          (commit) => {
#            const types = {
#              feat: '🚀 Features',
#              fix: '🐛 Bug Fixes',
#              perf: '⚡ Performance',
#              refactor: '🚜 Refactor',
#              docs: '📚 Documentation',
#              test: '🧪 Testing',
#              style: '🎨 Styling',
#              revert: '◀️ Revert',
#              build: '🏗️ Build',
#              ci: '🔄 CI',
#              chore: '🧹 Chore'
#            };
#
#            if (commit.type && types[commit.type]) {
#              commit.type = types[commit.type];
#            }
#
#            return commit;
#          }
  - '@semantic-release/git'
